[{"/home/rafaela/projetos/daily-calendar/src/pages/Calendar/index.tsx":"1","/home/rafaela/projetos/daily-calendar/src/index.tsx":"2","/home/rafaela/projetos/daily-calendar/src/model/calendar.ts":"3","/home/rafaela/projetos/daily-calendar/src/redux/ducks/loading.ts":"4"},{"size":4437,"mtime":1610651873326,"results":"5","hashOfConfig":"6"},{"size":680,"mtime":1609958255835,"results":"7","hashOfConfig":"6"},{"size":1408,"mtime":1610578458038,"results":"8","hashOfConfig":"6"},{"size":577,"mtime":1609958093034,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"y171pq",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rafaela/projetos/daily-calendar/src/pages/Calendar/index.tsx",["19"],"import React, { ReactNode, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Loading from \"../../components/Loading\";\nimport { IEvents, IGroups, time, ITime } from \"../../model/calendar\";\nimport { setDisplay } from \"../../redux/ducks/loading\";\nimport { DFlexStyled } from \"../../styles/global\";\n\nimport {\n  ContainerStyled,\n  HoursStyled,\n  EventsContainerStyled,\n  EventItemStyled,\n} from \"./styles\";\n\nconst Calendar: React.FC = () => {\n  const initialList: IEvents[] = [\n    { start: 30, end: 120 },\n    { start: 270, end: 430 },\n    { start: 480, end: 540 },\n    { start: 500, end: 570 },\n    { start: 550, end: 610 },\n  ];\n  const [listEvents, setListEvents] = useState<Array<IGroups>>();\n  const dispatch = useDispatch();\n\n  function between(current: IEvents, previous: IEvents): Boolean {\n    return (\n      (current.start <= previous.start && current.end >= previous.end) ||\n      (current.start >= previous.start && current.start <= previous.end)\n    );\n  }\n\n  function layoutDaily() {\n    let groups: any[] = [];\n    let indexGroup: number = 0;\n    let maxColumn: number = 1;\n    let indexColumn = 1;\n    let indexEvent = 0;\n    initialList.map((item, index, array) => {\n      if (index !== 0) {\n        //compara o item atual com o anterior\n        if (between(item, array[index - 1])) {\n          indexEvent++;\n\n          let previous: IGroups = groups[indexGroup];\n          let conflicItem: boolean = true;\n          //Verifica se todos os items estão conflitando\n          previous.items.forEach((itemPrevious) => {\n            if (!between(item, itemPrevious)) {\n              conflicItem = false;\n            }\n          });\n          //Caso não conflite com todos irá para a linha de baixo\n          //Senão adiciona mais 1 na coluna, indicando que ficará do lado\n          if (conflicItem) {\n            indexColumn++;\n            maxColumn = indexColumn;\n          } else {\n            indexColumn = 1;\n          }\n          const newItem = {\n            columns: maxColumn,\n            items: previous.items.concat({\n              ...item,\n              column: indexColumn,\n              index: indexEvent,\n            }),\n          };\n          groups[indexGroup] = newItem;\n        } else {\n          indexEvent++;\n\n          indexColumn = 1;\n          indexGroup++;\n          const newItem = {\n            columns: 1,\n            items: [{ ...item, column: 1, index: indexEvent }],\n          };\n          groups.push(newItem);\n        }\n      } else {\n        //É o primeiro item, então adiciona na lista\n        indexEvent++;\n        const newItem = {\n          columns: 1,\n          items: [{ ...item, column: 1, index: indexEvent }],\n        };\n        groups.push(newItem);\n      }\n\n      return item;\n    });\n    console.log(\"groups\", groups);\n    setListEvents(groups);\n  }\n\n  useEffect(() => {\n    dispatch(setDisplay(true));\n    layoutDaily();\n  }, []);\n  return listEvents && listEvents?.length > 0 ? (\n    <ContainerStyled>\n      <DFlexStyled justifyContent=\"center\" alignItems=\"center\">\n        <HoursStyled>\n          {time.map(\n            (item: ITime, index: number): ReactNode => (\n              <div key={index}>\n                {item.hour}\n                {item.period !== \"\" ? <span>{item.period}</span> : \"\"}\n              </div>\n            )\n          )}\n        </HoursStyled>\n        <EventsContainerStyled>\n          {listEvents.map(\n            (group: IGroups, groupIndex: number): ReactNode => (\n              <div key={groupIndex}>\n                {group.items.map(\n                  (item: IEvents, index: number): ReactNode => (\n                    <EventItemStyled\n                      key={item.index}\n                      top={item.start}\n                      height={item.end - item.start}\n                      columns={group.columns}\n                      column={item.column ? item.column : 1}\n                    >\n                      <h4>Veículo #{item.index}</h4>\n                      <p>\n                        \"Neque porro quisquam est qui dolorem ipsum quia dolor\n                        sit amet, consectetur, adipisci velit...\"\n                      </p>\n                    </EventItemStyled>\n                  )\n                )}\n              </div>\n            )\n          )}\n        </EventsContainerStyled>\n      </DFlexStyled>\n    </ContainerStyled>\n  ) : (\n    <Loading />\n  );\n};\n\nexport default Calendar;\n","/home/rafaela/projetos/daily-calendar/src/index.tsx",[],"/home/rafaela/projetos/daily-calendar/src/model/calendar.ts",[],"/home/rafaela/projetos/daily-calendar/src/redux/ducks/loading.ts",[],{"ruleId":"20","severity":1,"message":"21","line":100,"column":6,"nodeType":"22","endLine":100,"endColumn":8,"suggestions":"23"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'layoutDaily'. Either include them or remove the dependency array.","ArrayExpression",["24"],{"desc":"25","fix":"26"},"Update the dependencies array to be: [dispatch, layoutDaily]",{"range":"27","text":"28"},[2917,2919],"[dispatch, layoutDaily]"]